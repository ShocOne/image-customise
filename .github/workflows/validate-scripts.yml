name: validate-Install-Defaults.ps1

# Environment variables
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Controls when the action will run. 
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/validate-scripts.yml'
      - 'src/**'
      - 'tests/**'
      - '!src/VERSION.txt'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  validate:
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.0.2
        with:
          ref: main

      # Import GPG key
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPGKEY }}
          passphrase: ${{ secrets.GPGPASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
          git_committer_name: ${{ secrets.COMMIT_NAME }}
          git_committer_email: ${{ secrets.COMMIT_EMAIL }}

      - name: Install Pester
        shell: powershell
        run: |
          Install-Module -Name "Pester" -SkipPublisherCheck -Force

      # Run Pester tests
      - name: Run Pester tests
        shell: powershell
        run: |
          Import-Module -Name "Pester" -Force
          $Config = [PesterConfiguration]::Default
          $Config.Run.Path = "${{ github.workspace }}\tests"
          $Config.Run.PassThru = $True
          $Config.TestResult.Enabled = $True
          $Config.TestResult.OutputFormat = "NUnitXml"
          $Config.TestResult.OutputPath = "${{ github.workspace }}\TestOutput.xml"
          Invoke-Pester -Configuration $Config

      - name: Get version
        id: get-version
        shell: pwsh
        run: |
          echo "::set-output name=version::$(Get-Date -Format "yyMM.dd.$($env:GITHUB_RUN_NUMBER)")"

      # Update version number in VERSION.txt
      - name: Update version number
        shell: pwsh
        run: |
          "${{ steps.get-version.outputs.version }}" | `
            Out-File -FilePath "${{ github.workspace }}\src\VERSION.txt" -Encoding "ascii" -Force -NoNewline

      - name: Commit changes
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "${{ steps.get-version.outputs.version }}"
          commit_user_name: ${{ secrets.COMMIT_NAME }}
          commit_user_email: ${{ secrets.COMMIT_EMAIL }}

      - name: "Run if changes have been detected"
        if: steps.commit.outputs.changes_detected == 'true'
        run: echo "Changes committed."

      - name: "Run if no changes have been detected"
        if: steps.commit.outputs.changes_detected == 'false'
        run: echo "No changes detected."
